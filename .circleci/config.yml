---
version: 2.1

orbs:
  slack: circleci/slack@volatile
  circle-compare-url: iynere/compare-url@0.1.0

executors:
  cli:
    docker: [image: circleci/circleci-cli:0.1.2709]

workflows:
  version: 2
  main:
    jobs:
      - lint
      - build
      - dev-release:
          requires: [ build, lint ]

      - hold:
          type: approval
          filters:
            branches:
              only: master
      - dev-promote-patch:
          requires: [ hold ]

jobs:
  lint:
    docker: [ image: singapore/lint-condo ]
    steps:
      - checkout
      - run:
          'yamllint .'
  build:
    executor: cli
    steps:
      - checkout
      - run: 
          name: Validate Orbs
          command: "sh scripts/validate-orbs.sh"
  dev-release:
    executor: cli
    steps:
      - checkout
      - circle-compare-url/reconstruct
      - run:
          name: Publish dev releases of any modified orbs
          command: .scripts/publish_orbs.sh

  dev-promote-patch:
    executor: cli
    steps:
      - checkout
      - circle-compare-url/reconstruct
      - run:
          name: Publish any modified orbs
          shell: /bin/bash -exo pipefail
          command: |
            # save value stored in file to a local env var
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            for ORB in src/*/; do
              orbname=$(basename $ORB)
              if [[ $(git diff $COMMIT_RANGE --name-status | grep "$orbname") ]]; then

                echo "promoting circleci/${orbname}@dev:${CIRCLE_BRANCH}-${CIRCLE_SHA1} as patch release"

                circleci orb publish promote circleci/${orbname}@dev:${CIRCLE_BRANCH}-${CIRCLE_SHA1} patch --token $CIRCLECI_API_TOKEN
              else
                echo "${orbname} not modified; no need to promote"
              fi
              echo "------------------------------------------------------"
            done
